cluster:
  manager: kubernetes
  image:
    tag: 2.0.0-M4
  nifiProperties:
    webProxyHosts:
      - nifi-{{ .Environment.Name }}.pcdacs.local
    overrideConfigs: |-
      nifi.sensitive.props.key=thisisabadsensitivepropskey
  nodeConfigGroups:
    default-group:
      # serviceAccountName: nificluster-nifi-cluster
      storageConfigs:
        # Name of the storage config, used to name PV to reuse into sidecars for example.
        - name: provenance-repository
          # Retain this PVC throughout NifiCluster deletions.
          reclaimPolicy: Retain
          # Path where the volume will be mount into the main nifi container inside the pod.
          mountPath: "/opt/nifi/provenance_repository"
          # Metadata to attach to the PVC that gets created
          # metadata:
          #   labels:
          #     my-label: my-value
          #   annotations:
          #     my-annotation: my-value
          # Kubernetes PVC spec
          # https://kubernetes.io/docs/tasks/configure-pod-container/configure-persistent-volume-storage/#create-a-persistentvolumeclaim
          pvcSpec:
            accessModes:
              - ReadWriteOnce
            storageClassName: {{ .Values.defaultStorageClass }}
            resources:
              requests:
                storage: 10Gi
        # - mountPath: "/opt/nifi/nifi-current/logs"
        #   name: logs
        #   reclaimPolicy: Delete
        #   pvcSpec:
        #     accessModes:
        #       - ReadWriteOnce
        #     storageClassName: {{ .Values.defaultStorageClass }}
        #     resources:
        #       requests:
        #         storage: 10Gi

ingress:
  enabled: true
  className: nginx
  annotations: 
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "my-internal-ca"
  hosts:
    - host: nifi-{{ .Environment.Name }}.pcdacs.local
      paths:
        - path: /
          pathType: Prefix
          backend:
            # this needs to match the externalServices config above
            service:
              name: "nifi-cluster-ip"
              port:
                number: 8080
  tls:
   - secretName: nifi-cluster-tls
     hosts:
       - nifi-{{ .Environment.Name }}.pcdacs.local