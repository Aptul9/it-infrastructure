global:
  edition: ce
  hosts:
    domain: {{ .Environment.Name }}.pcdacs.local
    gitlab:
      name: "gitlab-{{ .Environment.Name }}.pcdacs.local"
  ingress:
    configureCertmanager: false
    class: nginx
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: "500m"
    tls:
      enabled: true
      secretName: gitlab-tls
  kas:
    enabled: false
  registry:
    enabled: false
  psql:
    database: gitlab
    host: 10.186.0.30
    port: 5000
    password:
      key: password
      secret: pgsql-secrets
    username: gitlab
  redis:
    auth:
      enabled: true
      secret: gitlab-redis-secret
      key: redis-password
    host: redis-master.cache.svc.cluster.local
    port: 6379
    database: 1
  minio:
    enabled: false
  appConfig:
    object_store:
      enabled: true
      proxy_download: true
      connection:
        secret: gitlab-rails-storage
        key: connection
    lfs:
      enabled: true
      proxy_download: true
      bucket: git-lfs
    artifacts:
      enabled: true
      proxy_download: true
      bucket: gitlab-artifacts
    uploads:
      enabled: true
      proxy_download: true
      bucket: gitlab-uploads
    packages:
      enabled: true
      proxy_download: true
      bucket: gitlab-packages
    externalDiffs:
      enabled: false
      proxy_download: true
      bucket: gitlab-mr-diffs

    terraformState:
      enabled: false
      bucket: gitlab-terraform-state
    ciSecureFiles:
      enabled: false
      bucket: gitlab-ci-secure-files
    dependencyProxy:
      enabled: false
      proxy_download: true
      bucket: gitlab-dependency-proxy
    backups:
      bucket: gitlab-backups
      tmpBucket: tmp

gitlab:
  gitaly:
    persistence:
      storageClass: longhorn
      size: 10Gi

# kubectl create secret generic pgsql-secrets --from-literal=password=gitlab --namespace=gitlab
# kubectl create secret generic gitlab-redis-secret --from-literal=redis-password=jfKEFOEwyF -n gitlab
# kubectl create secret generic gitlab-rails-storage --from-file=connection=minio-secret.yaml -n gitlab

  # certmanager-issuer:
  #   email: certificates@farhadnowzari.dev

redis:
  install: false

postgresql:
  install: false

prometheus:
  install: false

gitlab-runner:
  install: true
  # runnerToken: "glrt-KNfikiN_c8xrzJQ29zKHiG86MQpwOjEKdDozCnU6MQ8.01.170h5r5a5"         pre_build_script = "while [ ! -f /certs/client/ca.pem ]; do sleep 1; done"
  runners:
    config: |
      [[runners]]
        pre_get_sources_script = "for i in $(seq 1 5);do getent hosts gitlab-devops.pcdacs.local && break || sleep 1;done"
        url = "https://gitlab-devops.pcdacs.local"
        clone_url = "https://gitlab-devops.pcdacs.local"
        [runners.kubernetes]
          namespace = "gitlab"
          image = "ubuntu:20.04"
          privileged = true
          host_network = true
          dns_config = { nameservers = ["10.1.0.4", "10.1.0.5"] }
          [[runners.kubernetes.volumes.empty_dir]]
            name = "docker-certs"
            mount_path = "/certs/client"
            medium = "Memory"
          [[runners.kubernetes.dns_config.options]]
            name = "ndots"
            value = "1"

  volumes:
    - name: gitlab-ca-cert
      configMap:
        name: gitlab-ca-cert
  volumeMounts:
    - name: gitlab-ca-cert
      mountPath: /etc/ssl/certs/cacert.pem
      subPath: cacert.pem
      readOnly: true
nginx-ingress:
  enabled: false

installCertmanager: false

registry:
  enabled: false