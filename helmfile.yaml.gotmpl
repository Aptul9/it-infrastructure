# Se stiamo usando MetalLB la prima volta va fatto helmfile sync e non apply, altrimenti fallisce la creazione dei CRD e non rispetta i needs

helmDefaults:
  timeout: 600

environments:
  default:
    values:
    - values.dev.yaml
  dev:
    values:
    - values.dev.yaml
    kubeContext: acs_dev
  int:
    values:
    - values.int.yaml
    kubeContext: acs_int
  col:
    values:
    - values.col.yaml
    kubeContext: acs_col
  prd:
    values:
    - values.prd.yaml
    kubeContext: acs_prd
---

repositories:
  - name: jetstack
    url: https://charts.jetstack.io
  - name: rancher-stable
    url: https://releases.rancher.com/server-charts/stable
  - name: prometheus-community
    url: https://prometheus-community.github.io/helm-charts
  - name: grafana
    url: https://grafana.github.io/helm-charts
  - name: bitnami
    url: https://charts.bitnami.com/bitnami
  - name: longhorn
    url: https://charts.longhorn.io
  - name: ingress-nginx
    url: https://kubernetes.github.io/ingress-nginx
  - name: metallb
    url: https://metallb.github.io/metallb
  - name: camunda
    url: https://helm.camunda.io
  - name: apisix
    url: https://charts.apiseven.com
  # - name: harbor
  #   url: https://helm.goharbor.io
  # - name: wso2
  #   url: https://helm.wso2.com
  # - name: sonarqube
  #   url: https://SonarSource.github.io/helm-chart-sonarqube
  # - name: datadog
  #   url: https://helm.datadoghq.com


releases:

  - name: ingress-nginx
    namespace: ingress-nginx
    chart: ingress-nginx/ingress-nginx
    installed: {{ .Values.installed.ingressNginx }}

# NON USARE SU MINIKUBE, NON LO FA NEMMENO CANCELLARE SE NO
  - name: longhorn
    namespace: longhorn-system
    chart: longhorn/longhorn
    installed: {{ .Values.installed.longhorn }}
    wait: true
    waitForJobs: true
    timeout: 600
    values:
      - various/longhorn-values.gotmpl
# kubectl -n longhorn-system patch -p '{"value": "true"}' --type=merge lhs deleting-confirmation-flag

  - name: cert-manager
    namespace: cert-manager
    chart: jetstack/cert-manager
    createNamespace: true
    installed: {{ .Values.installed.certManager }}
    set:
      - name: crds.enabled
        value: true

  - name: rancher
    namespace: cattle-system
    chart: rancher-stable/rancher
    createNamespace: true
    installed: {{ .Values.installed.rancher }}
    values:
      - various/rancher-values.gotmpl
    needs:
      - cert-manager/cert-manager

  - name: kube-prometheus-stack
    namespace: monitoring
    chart: prometheus-community/kube-prometheus-stack
    version: 62.3.0
    disableValidation: true
    installed: {{ .Values.installed.prometheusStack }}
    values:
      - prom-loki/kube-prometheus-stack-values.yaml.gotmpl
    {{- if .Values.installed.longhorn }}
    needs:
      - longhorn-system/longhorn
    {{- end }}

  - name: loki-stack
    namespace: logging
    chart: grafana/loki-stack
    version: 2.10.0
    installed: {{ .Values.installed.loki }}
    values:
      - prom-loki/loki-stack-values.yaml.gotmpl
    {{- if .Values.installed.longhorn }}
    needs:
      - longhorn-system/longhorn
    {{- end }}

  - name: rabbitmq
    namespace: rabbitmq-operator
    chart: bitnami/rabbitmq-cluster-operator
    version: 4.3.25
    installed: {{ .Values.installed.rabbitMQ }}
    wait: true #necessario per my-infrastructure
    waitForJobs: true
    values:
      - db-queues/rabbitmq-values.yaml.gotmpl
    needs:
      {{- if .Values.installed.longhorn }}
      - longhorn-system/longhorn
      {{- end }}
      - cert-manager/cert-manager

  - name: redis
    namespace: cache
    chart: bitnami/redis
    version: 20.0.0
    installed: {{ .Values.installed.redis }}
    values:
      - db-queues/redis-values.yaml

  - name: mongodb
    namespace: database
    chart: bitnami/mongodb
    version: 15.6.0
    installed: {{ .Values.installed.mongoDB }}
    values:
      - db-queues/mongodb-values.yaml.gotmpl
    {{- if .Values.installed.longhorn }}
    needs:
      - longhorn-system/longhorn
    {{- end }}

  - name: metallb
    namespace: metallb-system
    createNamespace: true
    chart: metallb/metallb
    version: 0.14.8
    installed: {{ .Values.installed.metalLB }}
    wait: true #altrimenti fallisce la creazione di my-infrastructure

#chart usato per creare i CRD di metalLB al cluster, serve per gli indirizzi IP dei LoadBalancers
  - name: my-infrastructure
    namespace: my-infrastructure
    createNamespace: true
    chart: ./my-infrastructure
    # installed: {{ or .Values.installed.metalLB .Values.installed.datadog .Values.installed.rabbitMQ .Values.installed.nifikop}}
    installed: true
    wait: true
    waitForJobs: true
    needs:
      {{- if .Values.installed.metalLB }}
      - metallb-system/metallb
      {{- end }}
      {{- if .Values.installed.datadog }}
      - datadog/datadog-operator
      {{- end }}
      {{- if .Values.installed.rabbitMQ }}
      - rabbitmq-operator/rabbitmq 
      {{- end }}
      {{- if .Values.installed.nifikop }}
      - nifi/nifikop 
      {{- end }}
    values:
      - various/it-infrastructure-values.yaml.gotmpl

  # - name: datadog-operator
  #   namespace: datadog
  #   chart: datadog/datadog-operator
  #   version: 2.1.0
  #   createNamespace: true
  #   installed: {{ .Values.installed.datadog }}
  #   wait: true

  # - name: camunda
  #   namespace: camunda
  #   chart: camunda/camunda-platform
  #   createNamespace: true
  #   installed: {{ .Values.installed.camunda }}
  #   values:
  #     - various/camunda-values.yaml.gotmpl
  #   needs:
  #     - ingress-nginx/ingress-nginx
  #     {{- if .Values.installed.longhorn }}
  #     - longhorn-system/longhorn
  #     {{- end }}


  - name: nifikop
    namespace: nifi
    chart: oci://ghcr.io/konpyutaika/helm-charts/nifikop
    version: 1.12.0
    createNamespace: true
    wait: true
    waitForJobs: true
    installed: {{ .Values.installed.nifikop }}
    values:
      - dataflow/nifikop-values.yaml
    needs:
      - cert-manager/cert-manager

  - name: nificluster
    namespace: nifi
    chart: oci://ghcr.io/konpyutaika/helm-charts/nifi-cluster
    version: 1.11.1
    createNamespace: true
    wait: true
    waitForJobs: true
    installed: {{ .Values.installed.nifikop }}
    values:
      - dataflow/nificluster-values.yaml.gotmpl
    needs:
      - nifi/nifikop
      - my-infrastructure/my-infrastructure
      {{- if .Values.installed.longhorn }}
      - longhorn-system/longhorn
      {{- end }}

  - name: keycloak
    namespace: keycloak
    chart: bitnami/keycloak
    createNamespace: true
    version: 24.0.3
    installed: {{ .Values.installed.keycloak }}
    values:
      - various/keycloak-values.yaml.gotmpl
    needs:
      {{- if .Values.installed.longhorn }}
      - longhorn-system/longhorn
      {{- end }}

  - name: apisix
    namespace: ingress-apisix
    createNamespace: true
    chart: apisix/apisix
    version: 2.10.0
    values:
      - various/apisix-values.yaml.gotmpl


  # - name: harbor
  #   namespace: harbor
  #   chart: harbor/harbor
  #   createNamespace: true
  #   installed: {{ .Values.installed.harbor }}
  #   values:
  #     - various/harbor-values.yaml.gotmpl
  #   needs:
  #     {{- if .Values.installed.longhorn }}
  #     - longhorn-system/longhorn
  #     {{- end }}

  # - name: wso2
  #   namespace: wso2
  #   chart: wso2/am-pattern-1
  #   createNamespace: true
  #   installed: {{ .Values.installed.wso2 }}
  #   version: 4.2.0-2
  #   values:
  #     - various/wso2-values.yaml.gotmpl
  #   needs:
  #     {{- if .Values.installed.longhorn }}
  #     - longhorn-system/longhorn
  #     {{- end }}

  # - name: sonarqube
  #   namespace: sonarqube
  #   chart: sonarqube/sonarqube
  #   createNamespace: true
  #   installed: {{ .Values.installed.sonarqube }}
  #   version: 10.8.0
  #   values:
  #     - various/sonarqube-values.yaml.gotmpl
  #   needs:
  #     {{- if .Values.installed.longhorn }}
  #     - longhorn-system/longhorn
  #     {{- end }}

  # - name: elastic
  #   namespace: elastic
  #   chart: bitnami/elasticsearch
  #   createNamespace: true
  #   installed: {{ .Values.installed.sonarqube }}
  #   values:
  #     - various/sonarqube-values.yaml.gotmpl
  #   needs:
  #     {{- if .Values.installed.longhorn }}
  #     - longhorn-system/longhorn
  #     {{- end }}