grafana:
  adminPassword: prom-operator
  persistence:
    enabled: true
    type: sts
    storageClassName: {{ .Values.defaultStorageClass }}
    accessModes:
      - ReadWriteOnce
    size: 20Gi
    finalizers:
      - kubernetes.io/pvc-protection
  ingress:
    enabled: true
    ingressClassName: nginx
    hosts: 
      - grafana-{{ .Environment.Name }}.pcdacs.local
    annotations:
      cert-manager.io/cluster-issuer: "my-internal-ca"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
    tls:
    - hosts:
      - grafana-{{ .Environment.Name }}.pcdacs.local
      secretName: grafana-{{ .Environment.Name }}-tls
prometheus:
  prometheusSpec:
    routePrefix: /
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: {{ .Values.defaultStorageClass }}
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi
  ingress:
    enabled: true
    ingressClassName: nginx
    hosts:
      - prometheus-{{ .Environment.Name }}.pcdacs.local
    paths:
      - /
    annotations:
      cert-manager.io/cluster-issuer: "my-internal-ca"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
    tls:
    - hosts:
      - prometheus-{{ .Environment.Name }}.pcdacs.local
      secretName: prometheus-{{ .Environment.Name }}-tls
alertmanager:
  alertmanagerSpec:
    routePrefix: /
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: {{ .Values.defaultStorageClass }}
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi
  ingress:
    enabled: true
    ingressClassName: nginx
    hosts:
      - alertmanager-{{ .Environment.Name }}.pcdacs.local
    paths:
      - /
    annotations:
      cert-manager.io/cluster-issuer: "my-internal-ca"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
    tls:
    - hosts:
      - alertmanager-{{ .Environment.Name }}.pcdacs.local
      secretName: alertmanager-{{ .Environment.Name }}-tls